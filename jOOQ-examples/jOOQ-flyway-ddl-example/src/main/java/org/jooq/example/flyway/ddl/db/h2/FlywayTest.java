/* 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Other licenses:
 * -----------------------------------------------------------------------------
 * Commercial licenses for this work are available. These replace the above
 * ASL 2.0 and offer limited warranties, support, maintenance, and commercial
 * database integrations.
 *
 * For more information, please visit: http://www.jooq.org/licenses
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */
package org.jooq.example.flyway.ddl.db.h2;

import java.util.Arrays;
import java.util.List;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.example.flyway.ddl.db.h2.tables.Author;
import org.jooq.example.flyway.ddl.db.h2.tables.Book;
import org.jooq.impl.SchemaImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FlywayTest extends SchemaImpl {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>FLYWAY_TEST</code> */
  public static final FlywayTest FLYWAY_TEST = new FlywayTest();

  /** The table <code>FLYWAY_TEST.AUTHOR</code>. */
  public final Author AUTHOR = Author.AUTHOR;

  /** The table <code>FLYWAY_TEST.BOOK</code>. */
  public final Book BOOK = Book.BOOK;

  /** No further instances allowed */
  private FlywayTest() {
    super("FLYWAY_TEST", null);
  }

  @Override
  public Catalog getCatalog() {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Sequence<?>> getSequences() {
    return Arrays.asList(Sequences.S_AUTHOR_ID);
  }

  @Override
  public final List<Table<?>> getTables() {
    return Arrays.asList(Author.AUTHOR, Book.BOOK);
  }
}
